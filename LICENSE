class Pokemon:
    def __init__(self, name, level, type):
        self.name = name
        self.level = level
        self.type = type
        self.max_health = level * 5
        self.current_health = self.max_health

    def __repr__(self):
        return f'{self.name} ({self.type}, Lvl {self.level}, HP {self.current_health}/{self.max_health})'

    def move(self):
        print(f'{self.name} used a move!')

    def take_damage(self, damage):
        self.current_health -= damage
        if self.current_health < 0:
            self.current_health = 0
        print(f'{self.name} took {damage} damage.')



    def heal(self, amount):
        self.current_health += amount
        if self.current_health > self.max_health:
            self.current_health = self.max_health
        print(f'{self.name} healed {amount} HP.')



class FirePokemon(Pokemon):
    def __init__(self, name, level):
        super().__init__(name, level, "Fire")
    
    def move(self):
        print(f'{self.name} used Ember!')

    def take_damage(self, damage):
        if self.type == "Water":
            damage *= 2
        elif self.type == "Grass":
            damage /= 2
        super().take_damage(damage)

class WaterPokemon(Pokemon):
    def __init__(self, name, level):
        super().__init__(name, level, "Water")

    def move(self):
        print(f'{self.name} used Bubblebeam!')

    def take_damage(self, damage):
        if self.type == "Grass":
            damage *= 2
        elif self.type == "Fire":
            damage /= 2
        super().take_damage(damage)

class GrassPokemon(Pokemon):
    def __init__(self, name, level):
        super().__init__(name, level, "Grass")

    def move(self):
        print(f'{self.name} used Vine Whip!')

    def take_damage(self, damage):
        if self.type == "Fire":
            damage *= 2
        elif self.type == "Water":
            damage /= 2
        super().take_damage(damage)



charmander = FirePokemon("Charmander", 5)
squirtle = WaterPokemon("Squirtle", 5)
bulbasaur = GrassPokemon("Bulbasaur", 5)

print(charmander)
print(squirtle)
print(bulbasaur)

charmander.move()
squirtle.move()
bulbasaur.move()

squirtle.take_damage(10)
bulbasaur.take_damage(10)
charmander.take_damage(10)


